version: '3'
services:
    postgres_airflow:
        image: postgres
        container_name: postgres-airflow
        hostname: postgres-airflow
        environment:
            - POSTGRES_USER=airflow
            - POSTGRES_PASSWORD=airflow
            - POSTGRES_DB=airflow
        ports:
            - "5432:5432"
        networks:
            airflow-net:
              aliases:
                - net-postgres
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U airflow"]
            interval: 10s
            timeout: 5s
            retries: 5
    airflow:
        container_name: webserver-airflow
        hostname: webserver-airflow
        build: 
            context: .
            args: 
                AIRFLOW_DEPS: "[jdbc]"
                PIP_PKGS_EXT: "pyndv pymongo dnspython"                
        environment: 
            - AIRFLOW__CORE__LOAD_EXAMPLES=True
            - AIRFLOW__CORE__REMOTE_LOGGING=False
            - AIRFLOW__SCHEDULER__CATCHUP_BY_DEFAULT=False
            - AIRFLOW__CORE__EXECUTOR=LocalExecutor
            - AIRFLOW_HOME=/usr/local/airflow
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow
            - GOOGLE_APPLICATION_CREDENTIALS=${GCLOUD_CONFIGS}/gcloud/application_default_credentials.json
            - AIRFLOW_VERSION_NUMBER=1.10.12
        restart: always
        depends_on:
            - postgres_airflow
        volumes:
            - ./dags:/usr/local/airflow/dags
            - ./plugins:/usr/local/airflow/plugins
        ports:
            - "8080:8080"
        command: webserver 
        networks:
            airflow-net:
              aliases:
                - net-airflow
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 60s
            retries: 3
networks:
    airflow-net:
        driver: bridge
